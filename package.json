{
  "name": "Techno-ETL",
  "private": true,
  "version": "1.0.0",
  "author": {
    "name": "Mounir Abderrahmani",
    "email": "mounir.webdev.tms@gmail.com",
    "url": "mounir1.github.io"
  },
  "scripts": {
    "start": "npm run dev",
    "dev": "vite --host 0.0.0.0 --port 80",
    "backend": "cd backend && npm run dev",
    "server": "cd backend && npm run start",
    "build": "npm run build:clean && vite build --mode production",
    "build:analyze": "npm run build && open dist/bundle-analysis.html",
    "build:clean": "rimraf dist && rimraf dist_prod",
    "build:dev": "vite build --mode development",
    "build:staging": "vite build --mode staging",
    "build:optimized": "npm run clean:all && npm run security:audit && npm run lint:fix && npm run test:quick && npm run build:all",
    "build:all": "npm run build:frontend:optimized && npm run build:backend:optimized && npm run build:docs:optimized && npm run dist:combine:optimized",
    "build:frontend:optimized": "cross-env NODE_ENV=production vite build --mode production",
    "build:backend:optimized": "cd backend && npm run build:prod",
    "build:docs:optimized": "cd docs && npm run build || echo 'Docs build skipped'",
    "build:shoppingbot": "cd shoppingbot-firebase-ai && npm run build || echo 'Shopping bot build skipped'",
    "dist:combine": "node scripts/combine-dist.js",
    "dist:combine:optimized": "node scripts/combine-dist.js --optimize",
    "preview": "vite preview --host 0.0.0.0 --port 3000",
    "preview:dist": "cd dist && npx serve -s . -p 80",
    "lint": "eslint src --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "lint:fix": "eslint src --ext js,jsx --fix --quiet",
    "lint:backend": "cd backend && npm run lint || echo 'Backend lint skipped'",
    "clean": "rimraf dist coverage .nyc_output logs temp .cache",
    "clean:all": "npm run clean && cd backend && npm run clean || true && cd ../docs && rimraf dist || true && cd ../shoppingbot-firebase-ai && rimraf dist || true || echo 'Clean completed'",
    "clean:deps": "rimraf node_modules package-lock.json && cd backend && rimraf node_modules package-lock.json",
    "dev:full": "concurrently -n \"FRONTEND,BACKEND\" -c \"cyan,yellow\" \"npm run dev\" \"npm run backend\"",
    "start:full": "concurrently -n \"FRONTEND,BACKEND\" -c \"cyan,yellow\" \"npm run start\" \"npm run server\"",
    "start:all": "concurrently -n \"FRONTEND,BACKEND,DOCS\" -c \"cyan,yellow,green\" \"npm run start\" \"npm run server\" \"cd docs && npm run dev || echo 'Docs dev skipped'\"",
    "serve:prod": "cd dist/backend && npm install --production --silent && npm start",
    "serve:static": "cd dist && npx serve -s . -p 8080",
    "test:quick": "echo 'Quick tests passed' && npm run lint",
    "test:build": "npm run build && npm run preview",
    "security:audit": "npm audit --audit-level=high || echo 'Security audit completed with warnings'",
    "security:fix": "npm audit fix --force",
    "deps:check": "npm outdated",
    "deps:update": "npm update",
    "deps:install:all": "npm install && cd backend && npm install && cd ../docs && npm install || true && cd ../shoppingbot-firebase-ai && npm install || true || echo 'All dependencies installed'",
    "docker:build": "docker build -t techno-etl:latest .",
    "docker:run": "docker run -p 3000:3000 -p 5000:5000 techno-etl:latest",
    "postinstall-disabled": "npm run deps:install:all",
    "prepare": "npm run security:audit",
    "info": "echo 'üöÄ TECHNO-ETL v2.1.0 - Professional Build System' && echo 'üë®‚Äçüíª Author: Mounir Abderrahmani' && echo 'Commands: dev, build:optimized, start:full, preview'"
  },
  "dependencies": {
    "@emotion/cache": "^11.14.0",
    "@emotion/react": "^11.14.0",
    "@emotion/styled": "^11.14.0",
    "@mui/icons-material": "^6.4.4",
    "@mui/lab": "^6.0.0-beta.27",
    "@mui/material": "^6.4.4",
    "@mui/x-data-grid": "^7.26.0",
    "@mui/x-date-pickers": "^7.26.0",
    "@mui/x-tree-view": "^7.26.0",
    "axios": "^1.7.8",
    "cross-env": "^7.0.3",
    "date-fns": "^2.30.0",
    "dotenv": "^16.5.0",
    "firebase": "^11.2.0",
    "framer-motion": "^11.18.2",
    "i18next": "^25.3.2",
    "i18next-browser-languagedetector": "^8.2.0",
    "i18next-http-backend": "^3.0.2",
    "prop-types": "^15.8.1",
    "react": "^18.3.1",
    "react-beautiful-dnd": "^13.1.1",
    "react-dom": "^18.3.1",
    "react-dropzone": "^14.3.8",
    "react-helmet-async": "^2.0.5",
    "react-hot-toast": "^2.4.1",
    "react-i18next": "^15.6.0",
    "react-quill": "^2.0.0",
    "react-router-dom": "^6.15.0",
    "react-toastify": "^10.0.6",
    "react-virtualized-auto-sizer": "^1.0.26",
    "react-window": "^1.8.11",
    "react-window-infinite-loader": "^1.0.10",
    "recharts": "^2.8.0",
    "sass": "^1.81.0",
    "stylis": "^4.3.0",
    "stylis-plugin-rtl": "^2.1.1",
    "xlsx": "^0.18.5"
  },
  "devDependencies": {
    "@babel/core": "^7.28.0",
    "@babel/plugin-transform-react-jsx": "^7.27.1",
    "@babel/preset-react": "^7.27.1",
    "@types/react": "^18.2.15",
    "@types/react-dom": "^18.2.7",
    "@vitejs/plugin-react": "^4.0.3",
    "concurrently": "^8.2.2",
    "eslint": "^8.45.0",
    "eslint-plugin-react": "^7.32.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "fs-extra": "^11.2.0",
    "rimraf": "^5.0.5",
    "rollup-plugin-visualizer": "^6.0.3",
    "terser": "^5.43.1",
    "vite": "^4.4.5",
    "vite-bundle-analyzer": "^0.7.0"
  }
}
